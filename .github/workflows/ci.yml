name: CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        boost_version: [1.73.0]
        abi: [arm64-v8a]
        os: [ubuntu-latest]
        include:
          # includes a new variable of 'variation' for each host os
          - os: ubuntu-latest
            variation: linux
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Setup Environment Variables
      run: |
        set -x
        export NDK_ROOT=${ANDROID_SDK_ROOT}/ndk-bundle
        echo "::set-env name=NDK_ROOT::$NDK_ROOT"
        export NUM_CPU=`python -c 'import multiprocessing as mp; print(mp.cpu_count())'`
        echo "::set-env name=NUM_CPU::$NUM_CPU"
        set
        mkdir -p bins/${{ matrix.variation }}
        mkdir -p logs/${{ matrix.variation }}
    - name: Build Boost for Android on ${{ matrix.variation }}
      run: CXXFLAGS="-std=c++14" ./build-android.sh --boost=${{ matrix.boost_version }} --arch=${{ matrix.abi }} --with-libraries=atomic,random,date_time,filesystem,system,thread,chrono "${NDK_ROOT}"
    - name: Prepare Binaries
      run: |
        set -x
        mv build/out/* ${GITHUB_WORKSPACE}/bins/${{ matrix.variation }}/ || true
        # Get rid of boost include directory cause it takes a long time to pack and upload (~20 min)
        find ${GITHUB_WORKSPACE}/bins/${{ matrix.variation }} -type d -name "include" -exec rm -rf {} +
        ls -alFR ${GITHUB_WORKSPACE}/bins
      if: always()
    - name: Upload Binaries
      uses: actions/upload-artifact@v1
      with:
        name: binaries_${{ matrix.boost_version }}_${{ matrix.abi }}
        path: ./bins
      if: always()
    - name: Zip Binaries
      run: |
        zip binaries_${{ matrix.boost_version }}_${{ matrix.abi }}.zip ./bins
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ci-release
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: binaries_${{ matrix.boost_version }}_${{ matrix.abi }}.zip
        asset_name: binaries_${{ matrix.boost_version }}_${{ matrix.abi }}.zip
        asset_content_type: application/zip
    - name: Prepare Logs
      run: |
        set -x
        mv logs/*.log ${GITHUB_WORKSPACE}/logs/${{ matrix.variation }}/ || true
        ls -alFR ${GITHUB_WORKSPACE}/logs
      if: always()
    - name: Upload Logs
      uses: actions/upload-artifact@v1
      with:
        name: logs_${{ matrix.boost_version }}
        path: ./logs
      if: always()
